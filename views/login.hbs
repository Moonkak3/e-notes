<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8"/>
    <title>Login</title>
    <meta name="csrf-token" content="{{csrf}}">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover"/>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css"
          integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous"/>
    <link rel="icon" href="/images/favicon.256.png" type="image/png"/>
    <link rel="stylesheet" href="https://cdnjs.Cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"/>
    <script src="https://cdn.jsdelivr.net/npm/darkreader@4.9.26/darkreader.min.js"></script>
    <script>
        function updateTheme() {
            let dark;
            let theme = localStorage.getItem('theme') || 'auto';
            if (theme === 'auto') dark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
            else if (theme === 'dark') dark = true;
            else if (theme === 'light') dark = false;
            if (dark) DarkReader.enable({brightness: 80, contrast: 110, sepia: 20});
            else DarkReader.disable();
        }

        updateTheme();
    </script>
    <script src="https://kit.fontawesome.com/c32b3db897.js" crossorigin="anonymous"></script>
</head>
<body>

<div class="container">
    <div class="row mt-4">
        <div class="col-sm-1 col-xl-3"></div>
        <div class="card col-sm-10 col-xl-6">
            <article class="card-body">
                <h4 class="card-title text-center mb-4 mt-1">Sign in</h4>
                <button type="submit" class="btn btn-outline-dark btn-block" onclick="authSignIn()">
                    <i class="fab fa-microsoft"></i>
                    &nbsp;Login with Microsoft
                </button>
                <hr>
                <p class="text-success text-center" id="message"></p>
                <form id="login-form" onsubmit="return login();">
                    <div class="form-group">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <label for="email" class="input-group-text"><i class="fas fa-user"></i></label>
                            </div>
                            <input id="email" class="form-control" placeholder="Email" type="email" required>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <label for="password" class="input-group-text"><i class="fas fa-lock"></i></label>
                            </div>
                            <input id="password" class="form-control" placeholder="********" type="password" required>
                            <div class="invalid-feedback">
                                Incorrect password / User does not exist!
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary btn-block" id="login-btn">Login</button>
                    </div>
                    <p class="text-center">
                        <a href="#" class="btn" onclick="forgotPassword(this)">Forgot password?</a>
                        <a href="#" class="btn" onclick="help()">Whats this?</a>
                    </p>
                </form>
            </article>
        </div>
        <div class="col-sm-1 col-xl-3"></div>
    </div>
</div>
<script src="https://www.gstatic.com/firebasejs/8.0.0/firebase-app.js"></script>
<script src="https://www.gstatic.com/firebasejs/8.0.0/firebase-auth.js"></script>
<script>
    let form = GEBI('login-form');
    let message = GEBI('message');
    let email = GEBI('email');
    let password = GEBI('password');
    let loginBtn = GEBI('login-btn');
    firebase.initializeApp({
        apiKey: "AIzaSyARHcPTpQ09ekeN91DtgfrAl8kA3bgrcYM",
        authDomain: "e-notes-nush.firebaseapp.com",
        databaseURL: "https://e-notes-nush.firebaseio.com",
        projectId: "e-notes-nush",
        storageBucket: "e-notes-nush.appspot.com",
        messagingSenderId: "1002111194265",
        appId: "1:1002111194265:web:24a8837e5d910ebcd11408",
        measurementId: "G-5CEEWG9PZR"
    });
    const auth = firebase.auth();
    auth.onAuthStateChanged(async function (user) {
        if (user) {
            positive(message).innerText = "Welcome back! " + user.displayName;
            let idToken = await user.getIdToken(true);
            let result = await fetch("/", {
                method: "POST",
                credentials: 'same-origin',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json',
                    'CSRF-Token': qs('meta[name="csrf-token"]').getAttribute('content')
                }, body: JSON.stringify({
                    'idToken': idToken
                })
            });
            let json = await result.json();
            if (!user.emailVerified) {
                await user.sendEmailVerification();
                alert("Please check your inbox for a verification email!");
            }
            if (json.status === 'success') window.location.href = '/';
            else negative(message).innerText = "Failed for some unknown reason";
        }
    });

    function login() {
        loginBtn.disabled = email.disabled = password.disabled = true;
        auth.signInWithEmailAndPassword(email.value, password.value)
                .catch(error => negative(message).innerText = "Failed. " + error.message)
                .finally(() => loginBtn.disabled = email.disabled = password.disabled = false);
        return false;
    }

    function authSignIn() {
        let provider = new firebase.auth.OAuthProvider('microsoft.com');
        provider.setCustomParameters({prompt: 'consent'});
        auth.signInWithPopup(provider);
    }

    function forgotPassword(elem) {
        let emailAddr = email.value;
        loginBtn.disabled = email.disabled = password.disabled = elem.disabled = true;
        auth.sendPasswordResetEmail(emailAddr)
                .then(() => positive(message).innerText = "An email as been sent to your email!")
                .catch(error => negative(message).innerText = "Failed. " + error.message)
                .finally(() => loginBtn.disabled = email.disabled = password.disabled = elem.disabled = false);
    }

    function help() {
        alert("Not implemented");
    }

    function positive(elem) {
        elem.classList.remove('text-danger');
        elem.classList.add('text-success');
        return elem;
    }

    function negative(elem) {
        elem.classList.add('text-danger');
        elem.classList.remove('text-success');
        return elem;
    }
</script>
<script src="/js/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-ho+j7jyWK8fNQe+A12Hb8AhRq26LrZ/JpcUGGOn+Y7RsweNrtN/tE3MoK7ZeZDyx"
        crossorigin="anonymous"></script>
</body>
</html>